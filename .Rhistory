nodes$name %in% c("aac(3′)", "aadA", "aadB", "aadD",
"aph(3′)", "aphA15", "rrsH*", "rsmG*") ~ "Aminoglycosides",
nodes$name %in% c("gyrA*", "gyrB*", "parC*", "parE*", "qep", "qnr") ~ "Fluoroquinolones",
nodes$name %in% c("tetX", "tetM", "tetW", "tetA", "tetB", "tetC", "tetD") ~ "Drug_Tetracyclines",
nodes$name %in% c("catB", "catII", "cmlA", "floR") ~ "Drug_Phenicols",
nodes$name %in% c("dfr", "folP", "sul1", "sul2", "sul3", "sul4", "oqxAB") ~ "Drug_Sulfonamides",
nodes$name %in% c("nfsA*", "nfsB*, ahpF*, ribB*, ribE*") ~ "Drug_Nitrofurans",
nodes$name %in% c("ermA", "ermB", "ermC", "ereA", "mphA", "mphB", "mefA", "mefB", "msrA", "msrD") ~ "Drug_Macrolides",
TRUE ~ "Other"
)
nodes
# Grouping
nodes$group <- case_when(
nodes$name == "Aminoglycosides" ~ "Aminoglycosides",
nodes$name == "Fluoroquinolones" ~ "Fluoroquinolones",
nodes$name == "Tetracyclines" ~ "Tetracyclines",
nodes$name == "Phenicols" ~ "Phenicols",
nodes$name == "Sulfonamides & Trimethoprim" ~ "ulfonamides",
nodes$name == "Nitrofurans" ~ "Drug_Nitrofurans",
nodes$name %in% c("aac(3′)", "aadA", "aadB", "aadD",
"aph(3′)", "aphA15", "rrsH*", "rsmG*") ~ "Aminoglycosides",
nodes$name %in% c("gyrA*", "gyrB*", "parC*", "parE*", "qep", "qnr") ~ "Fluoroquinolones",
nodes$name %in% c("tetX", "tetM", "tetW", "tetA", "tetB", "tetC", "tetD") ~ "Tetracyclines",
nodes$name %in% c("catB", "catII", "cmlA", "floR") ~ "Drug_Phenicols",
nodes$name %in% c("dfr", "folP", "sul1", "sul2", "sul3", "sul4", "oqxAB") ~ "Sulfonamides",
nodes$name %in% c("nfsA*", "nfsB*", "ahpF*", "ribB*", "ribE*") ~ "Nitrofurans",
nodes$name %in% c("ermA", "ermB", "ermC", "ereA", "mphA", "mphB", "mefA", "mefB", "msrA", "msrD") ~ "Drug_Macrolides",
TRUE ~ "Other"
)
nodes
# Grouping
nodes$group <- case_when(
nodes$name == "Aminoglycosides" ~ "Aminoglycosides",
nodes$name == "Fluoroquinolones" ~ "Fluoroquinolones",
nodes$name == "Tetracyclines" ~ "Tetracyclines",
nodes$name == "Phenicols" ~ "Phenicols",
nodes$name == "Sulfonamides & Trimethoprim" ~ "ulfonamides",
nodes$name == "Nitrofurans" ~ "Nitrofurans",
nodes$name == "Macrolides" ~ "Macrolides",
nodes$name %in% c("aac(3′)", "aadA", "aadB", "aadD",
"aph(3′)", "aphA15", "rrsH*", "rsmG*") ~ "Aminoglycosides",
nodes$name %in% c("gyrA*", "gyrB*", "parC*", "parE*", "qep", "qnr") ~ "Fluoroquinolones",
nodes$name %in% c("tetX", "tetM", "tetW", "tetA", "tetB", "tetC", "tetD") ~ "Tetracyclines",
nodes$name %in% c("catB", "catII", "cmlA", "floR") ~ "Drug_Phenicols",
nodes$name %in% c("dfr", "folP", "sul1", "sul2", "sul3", "sul4", "oqxAB") ~ "Sulfonamides",
nodes$name %in% c("nfsA*", "nfsB*", "ahpF*", "ribB*", "ribE*") ~ "Nitrofurans",
nodes$name %in% c("ermA", "ermB", "ermC", "ereA", "mphA", "mphB", "mefA", "mefB", "msrA", "msrD") ~ "Macrolides",
TRUE ~ "Other"
)
nodes
unique(links$source)
links %>% filter(source == "Sulfonamides_Trimethoprim")
links <- read_csv("data/resistance_mechanisms.csv")
links %>% filter(source == "Sulfonamides_Trimethoprim")
links$target <- str_replace_all(links$target, "\\?", "′")
nodes <- data.frame(
name = unique(c(as.character(links$source), as.character(links$target))))
# Grouping
nodes$group <- case_when(
nodes$name == "Aminoglycosides" ~ "Aminoglycosides",
nodes$name == "Fluoroquinolones" ~ "Fluoroquinolones",
nodes$name == "Tetracyclines" ~ "Tetracyclines",
nodes$name == "Phenicols" ~ "Phenicols",
nodes$name == "Sulfonamides & Trimethoprim" ~ "Sulfonamides",
nodes$name == "Nitrofurans" ~ "Nitrofurans",
nodes$name == "Macrolides" ~ "Macrolides",
nodes$name %in% c("aac(3′)", "aadA", "aadB", "aadD",
"aph(3′)", "aphA15", "rrsH*", "rsmG*") ~ "Aminoglycosides",
nodes$name %in% c("gyrA*", "gyrB*", "parC*", "parE*", "qep", "qnr") ~ "Fluoroquinolones",
nodes$name %in% c("tetX", "tetM", "tetW", "tetA", "tetB", "tetC", "tetD") ~ "Tetracyclines",
nodes$name %in% c("catB", "catII", "cmlA", "floR") ~ "Phenicols",
nodes$name %in% c("dfr", "folP", "sul1", "sul2", "sul3", "sul4", "oqxAB") ~ "Sulfonamides",
nodes$name %in% c("nfsA*", "nfsB*", "ahpF*", "ribB*", "ribE*") ~ "Nitrofurans",
nodes$name %in% c("ermA", "ermB", "ermC", "ereA", "mphA", "mphB", "mefA", "mefB", "msrA", "msrD") ~ "Macrolides",
TRUE ~ "Other"
)
nodes
# ID mapping
links$IDsource <- match(links$source, nodes$name) - 1
links$IDtarget <- match(links$target, nodes$name) - 1
links
?match
links
drugs <- c("Aminoglycosides", "Fluoroquinolones", "Tetracyclines", "Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans")
drugs <- c("Aminoglycosides", "Fluoroquinolones", "Tetracyclines", "Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans")
mechanisms <- c("Enzymatic inactivation", "Target alteration", "Target protection", "Efflux pump", "Target replacement")
# Assign group dynamically
links$group <- case_when(
links$source %in% drugs ~ nodes$group[match(links$source, nodes$name)],
links$source %in% mechanisms ~ nodes$group[match(links$target, nodes$name)],
TRUE ~ "Other")
links
#Generate vector containing the group names for all the antibiotic classes
class <- c("Aminoglycosides", "Fluoroquinolones", "Tetracyclines", "Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans")
#Generate vector containing the group names for all the mechanisms
mechanisms <- c("Enzymatic inactivation", "Target alteration", "Target protection", "Efflux pump", "Target replacement")
# Assign groups
links$group <- case_when(
links$source %in% class ~ nodes$group[match(links$source, nodes$name)],
links$source %in% mechanisms ~ nodes$group[match(links$target, nodes$name)],
TRUE ~ "Other")
my_color <- 'd3.scaleOrdinal()
.domain(["Aminoglycosides", "Fluoroquinolones", "Tetracyclines",
"Phenicols", "Sulfonamides", "Nitrofurans", "Macrolides", "Other"])
.range(["#90CAF9", "#A5D6A7", "#D1C4E9", "#ffffb3", "#fb8072", "#fdb462", "#E0E0E0"]);'
# Sankey plot
p <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value2", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
fontSize = 12, fontFamily = "Verdana", nodeWidth = 60, sinksRight = FALSE, width = 900, height = 600
)
paletteer_d("ggsci::pink_material")
library(paletteer)
paletteer_d("ggsci::pink_material")
my_color <- 'd3.scaleOrdinal()
.domain(["Aminoglycosides", "Fluoroquinolones", "Tetracyclines",
"Phenicols", "Sulfonamides", "Nitrofurans", "Macrolides", "Other"])
.range(["#90CAF9", "#A5D6A7", "#D1C4E9", "#ffffb3", "#fb8072", "#fdb462", "#F8BBD0FF", "#E0E0E0"]);'
# Sankey plot
p <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value2", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
fontSize = 12, fontFamily = "Verdana", nodeWidth = 60, sinksRight = FALSE, width = 900, height = 600
)
# Sankey plot
p <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
fontSize = 12, fontFamily = "Verdana", nodeWidth = 60, sinksRight = FALSE, width = 900, height = 600
)
p
# Sankey plot
p <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
width = 900, height = 600
)
p
class(p)
install.packages("manipulateWidget")
library(networkD3)
library(tidyverse)
library(htmlwidgets)
library(manipulateWidget)
library(webshot2)
links <- read_csv("data/resistance_mechanisms.csv")
links$target <- str_replace_all(links$target, "\\?", "′")
nodes <- data.frame(
name = unique(c(as.character(links$source), as.character(links$target))))
# Grouping
nodes$group <- case_when(
nodes$name == "Aminoglycosides" ~ "Aminoglycosides",
nodes$name == "Fluoroquinolones" ~ "Fluoroquinolones",
nodes$name == "Tetracyclines" ~ "Tetracyclines",
nodes$name == "Phenicols" ~ "Phenicols",
nodes$name == "Sulfonamides & Trimethoprim" ~ "Sulfonamides",
nodes$name == "Nitrofurans" ~ "Nitrofurans",
nodes$name == "Macrolides" ~ "Macrolides",
nodes$name %in% c("aac(3′)", "aadA", "aadB", "aadD",
"aph(3′)", "aphA15", "rrsH*", "rsmG*") ~ "Aminoglycosides",
nodes$name %in% c("gyrA*", "gyrB*", "parC*", "parE*", "qep", "qnr") ~ "Fluoroquinolones",
nodes$name %in% c("tetX", "tetM", "tetW", "tetA", "tetB", "tetC", "tetD") ~ "Tetracyclines",
nodes$name %in% c("catB", "catII", "cmlA", "floR") ~ "Phenicols",
nodes$name %in% c("dfr", "folP", "sul1", "sul2", "sul3", "sul4", "oqxAB") ~ "Sulfonamides",
nodes$name %in% c("nfsA*", "nfsB*", "ahpF*", "ribB*", "ribE*") ~ "Nitrofurans",
nodes$name %in% c("ermA", "ermB", "ermC", "ereA", "mphA", "mphB", "mefA", "mefB", "msrA", "msrD") ~ "Macrolides",
TRUE ~ "Other"
)
# ID mapping
links$IDsource <- match(links$source, nodes$name) - 1
links$IDtarget <- match(links$target, nodes$name) - 1
#Generate vector containing the group names for all the antibiotic classes
class <- c("Aminoglycosides", "Fluoroquinolones", "Tetracyclines", "Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans")
#Generate vector containing the group names for all the mechanisms
mechanisms <- c("Enzymatic inactivation", "Target alteration", "Target protection", "Efflux pump", "Target replacement")
# Assign groups
links$group <- case_when(
links$source %in% class ~ nodes$group[match(links$source, nodes$name)],
links$source %in% mechanisms ~ nodes$group[match(links$target, nodes$name)],
TRUE ~ "Other")
my_color <- 'd3.scaleOrdinal()
.domain(["Aminoglycosides", "Fluoroquinolones", "Tetracyclines",
"Phenicols", "Sulfonamides", "Nitrofurans", "Macrolides", "Other"])
.range(["#90CAF9", "#A5D6A7", "#D1C4E9", "#ffffb3", "#fb8072", "#fdb462", "#F8BBD0FF", "#E0E0E0"]);'
# Sankey plot
p <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
width = 900, height = 600
)
p
# Sankey plot
p <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
fontSize = 12, fontFamily = "Verdana", nodeWidth = 60, sinksRight = FALSE, width = 900, height = 600
)
p
#prepend title
p1 <- htmlwidgets::prependContent(p, htmltools::tags$h1(htmltools::HTML("Resistance genes in <em>Escherichia coli</em>"),
style = "text-align:center; color:#1b2422; font-size:18px; font-family:Verdana;"))
p1
#append footnote
p2 <- htmlwidgets::appendContent(p1, htmltools::tags$p("* Genes with point mutations", style = "text-align:center; color:#666; font-size:12px; font-family:Verdana;"))
p2
#The following function was generated using chapgpt
p3 <- htmlwidgets::onRender(p2, '
function(el, x) {
const boldNames = [
"Aminoglycosides", "Fluoroquinolones", "Tetracyclines",
"Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans",
"Enzymatic inactivation", "Target alteration",
"Target protection", "Efflux pump", "Target replacement"
];
const italicSubstrings = [
"aac", "aad", "aph", "rr", "rsm", "qep", "qnr", "tet", "cat",
"gyr", "par", "mdf", "fol", "dfr", "nfs", "cml", "flo", "oqx", "sul"
];
d3.select(el)
.selectAll(".node text")
.style("font-weight", d => boldNames.includes(d.name) ? "bold" : "normal")
.style("font-style", d =>
italicSubstrings.some(sub => d.name.includes(sub)) ? "italic" : "normal"
);
}
')
p3
#The following function was generated using chapgpt
p3 <- htmlwidgets::onRender(p2, '
function(el, x) {
const boldNames = [
"Aminoglycosides", "Fluoroquinolones", "Tetracyclines",
"Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans",
"Enzymatic inactivation", "Target alteration",
"Target protection", "Efflux pump", "Target replacement"
];
const italicSubstrings = [
"aac", "aad", "aph", "rr", "rsm", "qep", "qnr", "tet", "cat",
"gyr", "par", "mdf", "fol", "dfr", "nfs", "cml", "flo", "oqx", "sul",
"erm", "ereA", "mph", "mef", "msr", "aphF", "rib"
];
d3.select(el)
.selectAll(".node text")
.style("font-weight", d => boldNames.includes(d.name) ? "bold" : "normal")
.style("font-style", d =>
italicSubstrings.some(sub => d.name.includes(sub)) ? "italic" : "normal"
);
}
')
p3
#Generate vector containing the group names for all the antibiotic classes
class <- c("Aminoglycosides", "Fluoroquinolones", "Tetracyclines", "Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans", "Macrolides")
#Generate vector containing the group names for all the mechanisms
mechanisms <- c("Enzymatic inactivation", "Target alteration", "Target protection", "Efflux pump", "Target replacement", "Reduced prodrug activation")
# Assign groups
links$group <- case_when(
links$source %in% class ~ nodes$group[match(links$source, nodes$name)],
links$source %in% mechanisms ~ nodes$group[match(links$target, nodes$name)],
TRUE ~ "Other")
my_color <- 'd3.scaleOrdinal()
.domain(["Aminoglycosides", "Fluoroquinolones", "Tetracyclines",
"Phenicols", "Sulfonamides", "Nitrofurans", "Macrolides", "Other"])
.range(["#90CAF9", "#A5D6A7", "#D1C4E9", "#ffffb3", "#fb8072", "#fdb462", "#F8BBD0FF", "#E0E0E0"]);'
# Sankey plot
p <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
width = 900, height = 600
)
# Sankey plot
q <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
fontSize = 12, fontFamily = "Verdana", nodeWidth = 60, sinksRight = FALSE, width = 900, height = 600
)
q
# Sankey plot
p <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
fontSize = 12, fontFamily = "Verdana", nodeWidth = 60, sinksRight = FALSE, width = 900, height = 600
)
#prepend title
p1 <- htmlwidgets::prependContent(p, htmltools::tags$h1(htmltools::HTML("Resistance genes in <em>Escherichia coli</em>"),
style = "text-align:center; color:#1b2422; font-size:18px; font-family:Verdana;"))
p1
#append footnote
p2 <- htmlwidgets::appendContent(p1, htmltools::tags$p("* Genes with point mutations", style = "text-align:center; color:#666; font-size:12px; font-family:Verdana;"))
p2
#The following function was generated using chapgpt
p3 <- htmlwidgets::onRender(p2, '
function(el, x) {
const boldNames = [
"Aminoglycosides", "Fluoroquinolones", "Tetracyclines",
"Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans",
"Enzymatic inactivation", "Target alteration",
"Target protection", "Efflux pump", "Target replacement",
"Reduced prodrug activation", "Macrolides"
];
const italicSubstrings = [
"aac", "aad", "aph", "rr", "rsm", "qep", "qnr", "tet", "cat",
"gyr", "par", "mdf", "fol", "dfr", "nfs", "cml", "flo", "oqx", "sul",
"erm", "ereA", "mph", "mef", "msr", "aphF", "rib"
];
d3.select(el)
.selectAll(".node text")
.style("font-weight", d => boldNames.includes(d.name) ? "bold" : "normal")
.style("font-style", d =>
italicSubstrings.some(sub => d.name.includes(sub)) ? "italic" : "normal"
);
}
')
p3
htmlwidgets::saveWidget(p3, "sankey.html", selfcontained = TRUE)
webshot("sankey.html", file = "output/sankey_arg.png", vwidth = 900, vheight = 700)
webshot("sankey.html", file = "output/sankey_arg.png", vwidth = 900, vheight = 700)
# Sankey plot
p <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
fontSize = 12, fontFamily = "Verdana", nodeWidth = 60, sinksRight = FALSE, width = 900, height = 900
)
p
#prepend title
p1 <- htmlwidgets::prependContent(p, htmltools::tags$h1(htmltools::HTML("Resistance genes in <em>Escherichia coli</em>"),
style = "text-align:center; color:#1b2422; font-size:18px; font-family:Verdana;"))
#append footnote
p2 <- htmlwidgets::appendContent(p1, htmltools::tags$p("* Genes with point mutations", style = "text-align:center; color:#666; font-size:12px; font-family:Verdana;"))
#The following function was generated using chapgpt
p3 <- htmlwidgets::onRender(p2, '
function(el, x) {
const boldNames = [
"Aminoglycosides", "Fluoroquinolones", "Tetracyclines",
"Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans",
"Enzymatic inactivation", "Target alteration",
"Target protection", "Efflux pump", "Target replacement",
"Reduced prodrug activation", "Macrolides"
];
const italicSubstrings = [
"aac", "aad", "aph", "rr", "rsm", "qep", "qnr", "tet", "cat",
"gyr", "par", "mdf", "fol", "dfr", "nfs", "cml", "flo", "oqx", "sul",
"erm", "ereA", "mph", "mef", "msr", "ahpF", "rib"
];
d3.select(el)
.selectAll(".node text")
.style("font-weight", d => boldNames.includes(d.name) ? "bold" : "normal")
.style("font-style", d =>
italicSubstrings.some(sub => d.name.includes(sub)) ? "italic" : "normal"
);
}
')
htmlwidgets::saveWidget(p3, "output/sankey.html", selfcontained = TRUE)
webshot("output/sankey.html", file = "output/sankey_arg.png", vwidth = 900, vheight = 900)
links <- read_csv("data/resistance_mechanisms.csv")
links$target <- str_replace_all(links$target, "\\?", "′")
nodes <- data.frame(
name = unique(c(as.character(links$source), as.character(links$target))))
# Grouping
nodes$group <- case_when(
nodes$name == "Aminoglycosides" ~ "Aminoglycosides",
nodes$name == "Fluoroquinolones" ~ "Fluoroquinolones",
nodes$name == "Tetracyclines" ~ "Tetracyclines",
nodes$name == "Phenicols" ~ "Phenicols",
nodes$name == "Sulfonamides & Trimethoprim" ~ "Sulfonamides",
nodes$name == "Nitrofurans" ~ "Nitrofurans",
nodes$name == "Macrolides" ~ "Macrolides",
nodes$name %in% c("aac(3′)", "aadA", "aadB", "aadD",
"aph(3′)", "aphA15", "rrsH*", "rsmG*") ~ "Aminoglycosides",
nodes$name %in% c("gyrA*", "gyrB*", "parC*", "parE*", "qep", "qnr") ~ "Fluoroquinolones",
nodes$name %in% c("tetX", "tetM", "tetW", "tetA", "tetB", "tetC", "tetD") ~ "Tetracyclines",
nodes$name %in% c("catB", "catII", "cmlA", "floR") ~ "Phenicols",
nodes$name %in% c("dfr", "folP*", "sul1", "sul2", "sul3", "sul4", "oqxAB") ~ "Sulfonamides",
nodes$name %in% c("nfsA*", "nfsB*", "ahpF*", "ribB*", "ribE*") ~ "Nitrofurans",
nodes$name %in% c("ermA", "ermB", "ermC", "ereA", "mphA", "mphB", "mefA", "mefB", "msrA", "msrD") ~ "Macrolides",
TRUE ~ "Other"
)
# ID mapping
links$IDsource <- match(links$source, nodes$name) - 1
links$IDtarget <- match(links$target, nodes$name) - 1
links
#Generate vector containing the group names for all the antibiotic classes
class <- c("Aminoglycosides", "Fluoroquinolones", "Tetracyclines", "Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans", "Macrolides")
#Generate vector containing the group names for all the mechanisms
mechanisms <- c("Enzymatic inactivation", "Target alteration", "Target protection", "Efflux pump", "Target replacement", "Reduced prodrug activation")
# Assign groups
links$group <- case_when(
links$source %in% class ~ nodes$group[match(links$source, nodes$name)],
links$source %in% mechanisms ~ nodes$group[match(links$target, nodes$name)],
TRUE ~ "Other")
my_color <- 'd3.scaleOrdinal()
.domain(["Aminoglycosides", "Fluoroquinolones", "Tetracyclines",
"Phenicols", "Sulfonamides", "Nitrofurans", "Macrolides", "Other"])
.range(["#90CAF9", "#A5D6A7", "#D1C4E9", "#ffffb3", "#fb8072", "#fdb462", "#F8BBD0FF", "#E0E0E0"]);'
# Sankey plot
p <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
fontSize = 12, fontFamily = "Verdana", nodeWidth = 60, sinksRight = FALSE, width = 900, height = 900
)
p
links <- read_csv("data/resistance_mechanisms.csv")
links$target <- str_replace_all(links$target, "\\?", "′")
nodes <- data.frame(
name = unique(c(as.character(links$source), as.character(links$target))))
# Grouping
nodes$group <- case_when(
nodes$name == "Aminoglycosides" ~ "Aminoglycosides",
nodes$name == "Fluoroquinolones" ~ "Fluoroquinolones",
nodes$name == "Tetracyclines" ~ "Tetracyclines",
nodes$name == "Phenicols" ~ "Phenicols",
nodes$name == "Sulfonamides & Trimethoprim" ~ "Sulfonamides",
nodes$name == "Nitrofurans" ~ "Nitrofurans",
nodes$name == "Macrolides" ~ "Macrolides",
nodes$name %in% c("aac(3′)", "aadA", "aadB", "aadD",
"aph(3′)", "aphA15", "rrsH*", "rsmG*") ~ "Aminoglycosides",
nodes$name %in% c("gyrA*", "gyrB*", "parC*", "parE*", "qep", "qnr", "oqxAB") ~ "Fluoroquinolones",
nodes$name %in% c("tetX", "tetM", "tetW", "tetA", "tetB", "tetC", "tetD") ~ "Tetracyclines",
nodes$name %in% c("catB", "catII", "cmlA", "floR") ~ "Phenicols",
nodes$name %in% c("dfr", "folP*", "sul1", "sul2", "sul3", "sul4") ~ "Sulfonamides",
nodes$name %in% c("nfsA*", "nfsB*", "ahpF*", "ribB*", "ribE*") ~ "Nitrofurans",
nodes$name %in% c("ermA", "ermB", "ermC", "ereA", "mphA", "mphB", "mefA", "mefB", "msrA", "msrD") ~ "Macrolides",
TRUE ~ "Other"
)
# ID mapping
links$IDsource <- match(links$source, nodes$name) - 1
links$IDtarget <- match(links$target, nodes$name) - 1
#Generate vector containing the group names for all the antibiotic classes
class <- c("Aminoglycosides", "Fluoroquinolones", "Tetracyclines", "Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans", "Macrolides")
#Generate vector containing the group names for all the mechanisms
mechanisms <- c("Enzymatic inactivation", "Target alteration", "Target protection", "Efflux pump", "Target replacement", "Reduced prodrug activation")
# Assign groups
links$group <- case_when(
links$source %in% class ~ nodes$group[match(links$source, nodes$name)],
links$source %in% mechanisms ~ nodes$group[match(links$target, nodes$name)],
TRUE ~ "Other")
my_color <- 'd3.scaleOrdinal()
.domain(["Aminoglycosides", "Fluoroquinolones", "Tetracyclines",
"Phenicols", "Sulfonamides", "Nitrofurans", "Macrolides", "Other"])
.range(["#90CAF9", "#A5D6A7", "#D1C4E9", "#ffffb3", "#fb8072", "#fdb462", "#F8BBD0FF", "#E0E0E0"]);'
# Sankey plot
p <- sankeyNetwork(
Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
NodeGroup = "group", LinkGroup = "group",
colourScale = my_color,
fontSize = 12, fontFamily = "Verdana", nodeWidth = 60, sinksRight = FALSE, width = 900, height = 900
)
p
#prepend title
p1 <- htmlwidgets::prependContent(p, htmltools::tags$h1(htmltools::HTML("Resistance genes in <em>Escherichia coli</em>"),
style = "text-align:center; color:#1b2422; font-size:18px; font-family:Verdana;"))
#append footnote
p2 <- htmlwidgets::appendContent(p1, htmltools::tags$p("* Genes with point mutations", style = "text-align:center; color:#666; font-size:12px; font-family:Verdana;"))
#The following function was generated using chapgpt
p3 <- htmlwidgets::onRender(p2, '
function(el, x) {
const boldNames = [
"Aminoglycosides", "Fluoroquinolones", "Tetracyclines",
"Phenicols", "Sulfonamides & Trimethoprim", "Nitrofurans",
"Enzymatic inactivation", "Target alteration",
"Target protection", "Efflux pump", "Target replacement",
"Reduced prodrug activation", "Macrolides"
];
const italicSubstrings = [
"aac", "aad", "aph", "rr", "rsm", "qep", "qnr", "tet", "cat",
"gyr", "par", "mdf", "fol", "dfr", "nfs", "cml", "flo", "oqx", "sul",
"erm", "ereA", "mph", "mef", "msr", "ahpF", "rib"
];
d3.select(el)
.selectAll(".node text")
.style("font-weight", d => boldNames.includes(d.name) ? "bold" : "normal")
.style("font-style", d =>
italicSubstrings.some(sub => d.name.includes(sub)) ? "italic" : "normal"
);
}
')
htmlwidgets::saveWidget(p3, "output/sankey.html", selfcontained = TRUE)
webshot("output/sankey.html", file = "output/sankey_arg.png", vwidth = 900, vheight = 900)
